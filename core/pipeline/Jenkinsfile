pipeline {
    environment {
        HTTP_PROXY = "http://child-prc.intel.com:913"
        HTTPS_PROXY = "http://child-prc.intel.com:913"
        NO_PROXY = ".devtools.intel.com,.intel.com"
    }

  agent {
    kubernetes {
      yaml """\
        apiVersion: v1
        kind: Pod
        metadata:
          labels:
            some-label: dtaf-unit
        spec:
          nodeSelector:
            app: unittest
          containers:
          - name: dtaf-unit
            image: gar-registry.caas.intel.com/dtaf-capi-test/dtaf_core_ut:latest
            command:
            - cat
            tty: true
          imagePullSecrets:
          - name: garregistrykey
        """.stripIndent()
    }
  }
  stages {
    stage('Testing Unit'){
        steps {
            container('dtaf-unit'){
                sh 'pwd && ls -al && CURRENT_DIR=`pwd` && export PYTHONPATH=${CURRENT_DIR}/src && echo $PYTHONPATH && pip3 install --upgrade pip --proxy http://child-prc.intel.com:913 && pip3 install -r requirements/requirements_ut_py37.txt -i https://pypi.tuna.tsinghua.edu.cn/simple --proxy http://child-prc.intel.com:913 && pytest tests/unit --cov dtaf_core --cov-config=./.ut_coveragerc --cov-report term --junit-xml=./ut/py3_ut.xml --html=./ut/py3_utreport.html --durations=10 -n auto  '
            }
            // archiveArtifacts artifacts: 'coverage_result.txt', fingerprint: true
        }
    }


        stage('Testing pylint') {
      steps {
          script {
            catchError(buildResult: 'SUCCESS', message: 'pylint') {
            try {
            container('dtaf-unit'){
                    sh 'ls -al && CURRENT_DIR=`pwd` && export PYTHONPATH=${CURRENT_DIR}/src && echo $PYTHONPATH && pip3 install --upgrade pip --proxy http://child-prc.intel.com:913 && pip3 install -r requirements/requirements_ut_py37.txt -i https://pypi.tuna.tsinghua.edu.cn/simple --proxy http://child-prc.intel.com:913  && pylint --rcfile=pylint.conf src/ | tee pylint_score.txt && cp pylint_score.txt ${CURRENT_DIR} '
                }
                archiveArtifacts artifacts: 'pylint_score.txt', fingerprint: true
            }catch(e) {
                echo "exit status code is 30"
                archiveArtifacts artifacts: 'pylint_score.txt', fingerprint: true
            }
        }
        }
      }
    }



        stage("SystemTest_PY3") {
            parallel {
                stage("soundwave1") {
                    agent {
                        label "soundwave1"
                    }

                    environment {
                        marker = 'soundwave1'
                    }

                    when {
                    not { changelog 'skip st' }
                    }
                    stages {
                        stage('soundwave1 test') {
                            steps {
                                bat '''
                                python -V
                                pip install -r requirements/requirements_st_py37.txt -i https://pypi.tuna.tsinghua.edu.cn/simple --proxy $HTTP_PROXY
                                cd src
                                set PYTHONPATH=%cd%
                                echo %PYTHONPATH%
                                cd ..
                                pytest tests/system --cov dtaf_core --cov-config=./.st_coveragerc --cov-report term --html=./st/py3_streport.html -m soundwave1
                                '''
                               // pytest tests/system --cov dtaf_core --cov-config=./.st_coveragerc --cov-report term --html=./st/py3_streport.html -m soundwave1
                            }
                        }
                    }
                }

                stage("soundwave2") {
                    agent {
                        label "soundwave2"
                    }

                    environment {
                        marker = 'soundwave2'
                    }

                    when {
                    not { changelog 'skip st' }
                    }
                    stages {
                        stage('soundwave2 test') {
                            steps {
                                bat '''
                                python -V
                                pip install -r requirements/requirements_st_py37.txt -i https://pypi.tuna.tsinghua.edu.cn/simple --proxy $HTTP_PROXY
                                cd src
                                set PYTHONPATH=%cd%
                                echo %PYTHONPATH%
                                cd ..
                                pytest tests/system --cov dtaf_core --cov-config=./.st_coveragerc --cov-report term --html=./st/py3_streport.html -m soundwave2
                                '''
                               // pytest tests/system --cov dtaf_core --cov-config=./.st_coveragerc --cov-report term --html=./st/py3_streport.html -m soundwave1
                            }
                        }
                    }
                }

                stage("pi1") {
                    agent {
                        label "pi1"
                    }

                    environment {
                        marker = 'pi1'
                    }

                    when {
                    not { changelog 'skip st' }
                    }
                    stages {
                        stage('pi1 test') {
                            steps {
                                bat '''
                                python -V
                                pip install -r requirements/requirements_st_py37.txt -i https://pypi.tuna.tsinghua.edu.cn/simple --proxy $HTTP_PROXY
                                cd src
                                set PYTHONPATH=%cd%
                                echo %PYTHONPATH%
                                cd ..
                                pytest tests/system --cov dtaf_core --cov-config=./.st_coveragerc --cov-report term --html=./st/py3_streport.html -m pi1
                                '''
                            }
                        }
                    }
                }

                stage("pi2") {
                    agent {
                        label "pi2"
                    }

                    environment {
                        marker = 'pi2'
                    }

                    when {
                    not { changelog 'skip st' }
                    }
                    stages {
                        stage('p2 test') {
                            steps {
                                bat '''
                                python -V
                                pip install -r requirements/requirements_st_py37.txt -i https://pypi.tuna.tsinghua.edu.cn/simple --proxy $HTTP_PROXY
                                cd src
                                set PYTHONPATH=%cd%
                                echo %PYTHONPATH%
                                cd ..
                                pytest tests/system --cov dtaf_core --cov-config=./.st_coveragerc --cov-report term --html=./st/py3_streport.html -m pi2
                                '''
                            }

                        }
                    }
                }

                stage("dtafcontent") {
                    agent {
                        label "sdpcloud"
                    }

                    environment {
                        marker = 'dtafcontent'
                    }

                    when {
                    not { changelog 'skip st' }
                    }
                    stages {
                        stage('dtafcontest test') {
                            steps {
                                bat '''
                                python -V
                                cd src
                                set DTAFPATH=%cd%
                                set PYTHONPATH=%DTAFPATH%;C:/DPG_Automation/dtaf_content;C:/pythonsv;C:/cscipts
                                echo %PYTHONPATH%
                                cd C:/DPG_Automation/dtaf_content
                                '''
                            }

                        }
                    }
                }

                stage("soundwave3") {
                    agent {
                        label "soundwave3"
                    }

                    environment {
                        marker = 'soundwave3'
                    }

                    when {
                    not { changelog 'skip st' }
                    }
                    stages {
                        stage('soundwave3 test') {
                            steps {
                                bat '''
                                python -V
                                pip install -r requirements/requirements_st_py37.txt -i https://pypi.tuna.tsinghua.edu.cn/simple --proxy $HTTP_PROXY
                                cd src
                                set PYTHONPATH=%cd%
                                echo %PYTHONPATH%
                                cd ..
                                pytest tests/system --cov dtaf_core --cov-config=./.st_coveragerc --cov-report term --html=./st/py3_streport.html -m soundwave3
                                '''
                            }

                        }
                    }
                }


                stage("soundwave4") {
                    agent {
                        label "soundwave4"
                    }

                    environment {
                        marker = 'soundwave4'
                    }

                    when {
                    not { changelog 'skip st' }
                    }
                    stages {
                        stage('soundwave4 test') {
                            steps {
                                bat '''
                                python -V
                                pip install -r requirements/requirements_st_py37.txt -i https://pypi.tuna.tsinghua.edu.cn/simple --proxy $HTTP_PROXY
                                cd src
                                set PYTHONPATH=%cd%
                                echo %PYTHONPATH%
                                cd ..
                                pytest tests/system --cov dtaf_core --cov-config=./.st_coveragerc --cov-report term --html=./st/py3_streport.html -m soundwave4
                                '''
                            }

                        }
                    }
                }

                stage("soundwave5") {
                    agent {
                        label "soundwave5"
                    }

                    environment {
                        marker = 'soundwave5'
                    }

                    when {
                    not { changelog 'skip st' }
                    }
                    stages {
                        stage('soundwave5 test') {
                            steps {
                                bat '''
                                python -V
                                pip install -r requirements/requirements_st_py37.txt -i https://pypi.tuna.tsinghua.edu.cn/simple --proxy $HTTP_PROXY
                                cd src
                                set PYTHONPATH=%cd%
                                echo %PYTHONPATH%
                                cd ..
                                '''
                                // pytest tests/system --cov dtaf_core --cov-config=./.st_coveragerc --cov-report term --html=./st/py3_streport.html -m soundwave5
                            }

                        }
                    }
                }
            }
        }
     }

    post {
        always {
            echo 'One way or another, I have finished'
            emailext (
            body: '''${SCRIPT, template="groovy-html.template"}''',
            mimeType: 'text/html',
            subject: "[Jenkins]-> " + currentBuild.fullDisplayName,
            to: '$DEFAULT_RECIPIENTS'
            )
        }
        success {
            echo 'I succeeeded!'
        }
        unstable {
            echo 'I am unstable :/'
        }
        failure {
            echo "i am failure"
        }
        changed {
            echo 'Things were different before...'
        }
    }

}
